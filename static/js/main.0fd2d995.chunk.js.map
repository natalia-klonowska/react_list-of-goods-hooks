{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","LENGTH","good1","good2","length","reverse","console","log","App","useState","setIsReversed","NONE","setSortType","className","type","onClick","stateOfReversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAiBzB,OAfIC,IAAaJ,EAASO,UACxBD,EAAaE,OAGXJ,IAAaJ,EAASS,QACxBH,EAAaE,MAAK,SAACE,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAGvDP,GACFC,EAAaO,UAIfC,QAAQC,IAAIX,EAAUC,GAEfC,G,SAhCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAMgB,EAAgB,WAC3B,MAAgBC,mBAAmBhB,GAA5BE,EAAP,oBACA,EAAoCc,oBAAS,GAA7C,mBAAOZ,EAAP,KAAmBa,EAAnB,KACA,EAAgCD,mBAAmBjB,EAASmB,MAA5D,mBAAOf,EAAP,KAAiBgB,EAAjB,KAmBA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBjB,IAAaJ,EAASO,UAAY,WAAtD,KACTgB,QAnBmB,WACzBH,EAAYpB,EAASO,WAejB,iCAQA,wBACEe,KAAK,SACLD,UAAS,4BAAuBjB,IAAaJ,EAASS,QAAU,WAAvD,KACTc,QAvBa,WACnBH,EAAYpB,EAASS,SAmBjB,4BAQA,wBACEa,KAAK,SACLD,UAAS,6BAAwBhB,GAAc,WAAtC,KACTkB,QAvCa,WACnBL,GAAc,SAAAM,GAAe,OAAKA,MAmC9B,sBAQEpB,IAAaJ,EAASmB,MAAQd,IAC9B,wBACEiB,KAAK,SACLD,UAAU,4BACVE,QApCI,WACZL,GAAc,GACdE,EAAYpB,EAASmB,OA+Bf,sBAUJ,6BACE,6BACGjB,EAAkBC,EAAO,CAAEC,WAAUC,eACnCoB,KAAI,SAACC,GAAD,OAAW,oBAAI,UAAQ,OAAZ,SAAoBA,eChHhDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0fd2d995.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort();\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((good1, good2) => good1.length - good2.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [goods] = useState<string[]>(goodsFromServer);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState<SortType>(SortType.NONE);\n\n  const reverseOrder = () => {\n    setIsReversed(stateOfReversed => !stateOfReversed);\n  };\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.ALPHABET && 'is-light'} `}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'} `}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'} `}\n          onClick={reverseOrder}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goods, { sortType, isReversed })\n            .map((good) => (<li data-cy=\"Good\">{good}</li>))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}